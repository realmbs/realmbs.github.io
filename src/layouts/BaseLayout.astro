---
export interface Props {
  title: string;
  description?: string;
}

const { title, description =  "Mark A. Blaha II - Cybersecurity Student" } = Astro.props;

import '../styles/global.scss';
import data from '../data/data.json';
const { personal, social } = data;


---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{title}</title>
  <meta name="description" content={description} />
  <meta name="keywords" content="cybersecurity, penetration testing, security engineer, OSCP, Security+, AWS" />
  <meta name="author" content={personal.name} />
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <!-- <meta property="og:url" content="https://realmbs.github.io/" /> -->
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  
  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <!-- <meta property="twitter:url" content="https://realmbs.github.io/" /> -->
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  
  <!-- Favicon -->
  <link rel="icon" type="image/svg+xml" href='../assets/favicon.svg' />
  
  <!-- Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  
  <!-- styles -->
  <!-- <link rel="stylesheet" href="/src/styles/main.scss" /> -->
</head>
<body>
  <nav class="nav">
    <div class="nav__scroll-indicator"></div>
    <div class="container nav__container">
      <a href="/" class="nav__brand">Mark Blaha</a>
      
      <!-- mobile nav (hamburger menu) -->
      <details class="nav__mobile">
        <summary aria-label="Open main menu"></summary>
        <ul class="nav__links">
          <li><a href="#about" class="nav__link">About</a></li>
          <li><a href="#education" class="nav__link">Education</a></li>
          <li><a href="#skills" class="nav__link">Skills</a></li>
          <li><a href="#projects" class="nav__link">Projects</a></li>
          <li><a href="#certifications" class="nav__link">Certifications</a></li>
          <li><a href="#contact" class="nav__link">Contact</a></li>
        </ul>
      </details>

      <!-- desktop nav links -->
      <ul class="nav__links">
        <li><a href="#about" class="nav__link">About</a></li>
        <li><a href="#education" class="nav__link">Education</a></li>
        <li><a href="#skills" class="nav__link">Skills</a></li>
        <li><a href="#projects" class="nav__link">Projects</a></li>
        <li><a href="#certifications" class="nav__link">Certifications</a></li>
        <li><a href="#contact" class="nav__link">Contact</a></li>
      </ul>
    </div>
  </nav>

  <main>
    <slot />
  </main>

<!-- site footer -->

  <footer class="footer">
    <div class="container">
      <div class="footer__content">
        <p>&copy; 2025 {personal.name}. All rights reserved.</p>
        <div class="footer__social">
          <a href="mailto:markblaha96@icloud.com" class="footer__social-link" aria-label="Email">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
            </svg>
          </a>
          <a href={social.github} class="footer__social-link" aria-label="GitHub" target="_blank" rel="noopener">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
          </a>
          <a href={social.linkedin} class="footer__social-link" aria-label="LinkedIn" target="_blank" rel="noopener">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
            </svg>
          </a>
        </div>
      </div>
    </div>
  </footer>

  <script>
import { navigate } from "astro:transitions/client";

    // Enhanced navigation functionality
    document.addEventListener('DOMContentLoaded', () => {
      const nav = document.querySelector<HTMLElement>('.nav');
      const scrollIndicator = document.querySelector<HTMLElement>('.nav__scroll-indicator');
      const sections = document.querySelectorAll<HTMLElement>('section[id]');
      const navLinks = document.querySelectorAll<HTMLAnchorElement>('.nav__link');

      // Smooth scrolling for navigation links
      document.querySelectorAll<HTMLAnchorElement>('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector<HTMLElement>(this.getAttribute('href') || '');
          if (target) {
            const navHeight = nav ? nav.offsetHeight : 80;
            const targetPosition = target.offsetTop - navHeight - 10;
            
            // Close mobile menu if open
            const mobileNav = document.querySelector<HTMLDetailsElement>('.nav__mobile');
            if (mobileNav && mobileNav.hasAttribute('open')) {
              mobileNav.removeAttribute('open');
            }
            
            window.scrollTo({
              top: targetPosition,
              behavior: 'smooth'
            });
          }
        });
      });

      // Enhanced scroll effects
      function handleScroll() {
        const scrollPosition = window.scrollY;
        const windowHeight = window.innerHeight;
        const documentHeight = document.documentElement.scrollHeight;
        
        // Add scrolled class for glassmorphism effect
        if (scrollPosition > 20) {
          nav?.classList.add('scrolled');
        } else {
          nav?.classList.remove('scrolled');
        }
        
        // Update scroll indicator
        const scrollPercent = scrollPosition / (documentHeight - windowHeight);
        if (scrollIndicator) {
          scrollIndicator.style.width = `${Math.min(scrollPercent * 100, 100)}%`;
        }
        
        // Update active nav link with offset
        const offset = 120;
        sections.forEach(section => {
          const sectionTop = section.offsetTop;
          const sectionHeight = section.offsetHeight;
          const sectionId = section.getAttribute('id');

          if (scrollPosition + offset >= sectionTop && 
              scrollPosition + offset < sectionTop + sectionHeight) {
            navLinks.forEach(link => {
              link.classList.remove('active');
              if (link.getAttribute('href') === `#${sectionId}`) {
                link.classList.add('active');
              }
            });
          }
        });
      }

      // Throttled scroll handler for better performance
      let scrollTimeout: number | undefined;
      window.addEventListener('scroll', () => {
        if (scrollTimeout) {
          window.cancelAnimationFrame(scrollTimeout);
        }
        scrollTimeout = window.requestAnimationFrame(handleScroll);
      });

      // Initial call
      handleScroll();

      // Enhanced mobile menu interaction
      const mobileNav = document.querySelector<HTMLDetailsElement>('.nav__mobile');
      const mobileNavSummary = mobileNav?.querySelector('summary');
      
      if (mobileNavSummary) {
        mobileNavSummary.addEventListener('click', (e) => {
          // Add subtle haptic feedback for mobile devices
          if ('vibrate' in navigator) {
            navigator.vibrate(50);
          }
        });
      }

      // Close mobile menu when clicking outside
      document.addEventListener('click', (e) => {
        if (mobileNav && mobileNav.hasAttribute('open')) {
          const target = e.target as Node;
          if (target && !mobileNav.contains(target)) {
            mobileNav.removeAttribute('open');
          }
        }
      });

      // Close mobile menu on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && mobileNav && mobileNav.hasAttribute('open')) {
          mobileNav.removeAttribute('open');
        }
      });

      // Intersection Observer for fade-in animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('fade-in-up');
          }
        });
      }, observerOptions);

      // Observe all cards and sections
      document.querySelectorAll('.card, .section').forEach(el => {
        observer.observe(el);
      });

      // Preload scroll position for better UX
      window.addEventListener('load', () => {
        handleScroll();
        
        // Add loaded class for any entry animations
        document.body.classList.add('loaded');
      });
    });
  </script>
</body>
</html>